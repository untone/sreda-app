{"version":3,"sources":["repos/actions.js","repos/store.js","rootReducer.js","utils.js","api.js","constants.js","repos/sagas.js","sagas.js","store.js","repos/Search.jsx","repos/Header.jsx","repos/Item.jsx","repos/List.jsx","repos/Pager.jsx","repos/Repos.jsx","repos/ReposContainer.jsx","App.js","serviceWorker.js","index.js","repos/repos.module.css"],"names":["LOCATION_CHANGE","FETCH_LICENSES_STARTED","FETCH_LICENSES_SUCCEEDED","FETCH_LICENSES_FAILED","FETCH_REPOS_STARTED","FETCH_REPOS_SUCCEEDED","FETCH_REPOS_FAILURE","SET_QUERY","initialState","date","Date","setMonth","getMonth","monthAgo","license","licenses","items","inited","loading","message","search","page","total","repos","state","arguments","length","undefined","action","payload","type","total_count","sessionStorage","setItem","JSON","stringify","Object","objectSpread","key","spdx_id","concat","toConsumableArray","rootReducer","history","combineReducers","router","connectRouter","loadingBar","loadingBarReducer","searchParams","_ref","_ref2","slicedToArray","value","remove","searchQuery","urlParams","location","set","delete","toString","displayTotal","num","Intl","NumberFormat","style","format","args","URLSearchParams","token","atob","parseQuery","aprgs","params","result","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","_ref3","parseInt","err","return","fetchData","endpoint","url","keys","created","toISOString","slice","filter","query","sort","order","per_page","serializeParams","fetch","then","response","json","catch","error","fetchLicenses","_ref4","asyncToGenerator","regenerator_default","a","mark","_callee","savedData","parsedData","wrap","_context","prev","getItem","parse","abrupt","sent","stop","apply","this","fetchRepos","_ref5","_callee2","data","_context2","_x","getLicenses","getQuery","getRepos","getState","_licenses","select","put","call","t0","_marked","_marked2","_context3","showLoading","hideLoading","finish","_marked3","_context4","takeLatest","_marked4","root","spawn","sagas_marked","createBrowserHistory","sagaMiddleware","createSagaMiddleware","Search","onChange","react_default","createElement","className","autoFocus","spellCheck","input","placeholder","defaultValue","onKeyUp","event","_ref2$nativeEvent","nativeEvent","target","which","handleChange","Header","header","counter","map","Item","full_name","id","html_url","_ref$license","name","stargazers_count","item","href","rel","details","index_esm","icon","Star","label","react","Law","memo","list","empty","Pager","rc_pagination_es","locale","localeInfo","pagination","hideOnSinglePage","defaultCurrent","itemRender","current","path","display","ChevronLeft","ChevronRight","react_router_dom","to","pageSize","showLessItems","showPrevNextJumpers","Title","title","Repos","props","repos_Search","Repos_Title","repos_Header","repos_List","repos_Pager","connect","dispatch","add","push","withRouter","store","preloadedState","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","run","configureStore","top","zIndex","backgroundColor","height","App","es","esm","build_default","react_router","component","ReposContainer","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","back"],"mappings":"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","file":"static/js/main.fe5c3b9d.chunk.js","sourcesContent":["const LOCATION_CHANGE = '@@router/LOCATION_CHANGE';\nconst FETCH_LICENSES_STARTED = 'REPOS/FETCH_LICENSES_STARTED';\nconst FETCH_LICENSES_SUCCEEDED = 'REPOS/FETCH_LICENSES_SUCCEEDED';\nconst FETCH_LICENSES_FAILED = 'REPOS/FETCH_LICENSES_FAILED';\nconst FETCH_REPOS_STARTED = 'REPOS/FETCH_REPOS_STARTED';\nconst FETCH_REPOS_SUCCEEDED = 'REPOS/FETCH_REPOS_SUCCEEDED';\nconst FETCH_REPOS_FAILURE = 'REPOS/FETCH_REPOS_FAILURE';\nconst SET_QUERY = 'REPOS/SET_QUERY';\n\nexport {\n  LOCATION_CHANGE,\n  FETCH_LICENSES_STARTED,\n  FETCH_LICENSES_SUCCEEDED,\n  FETCH_LICENSES_FAILED,\n  FETCH_REPOS_STARTED,\n  FETCH_REPOS_SUCCEEDED,\n  FETCH_REPOS_FAILURE,\n  SET_QUERY,\n};\n","import {\n  FETCH_LICENSES_SUCCEEDED,\n  FETCH_LICENSES_FAILED,\n  FETCH_REPOS_STARTED,\n  FETCH_REPOS_SUCCEEDED,\n  FETCH_REPOS_FAILURE,\n  SET_QUERY\n} from './actions';\n\nconst monthAgo = () => {\n  let date = new Date();\n  date.setMonth(date.getMonth() - 1);\n  return date;\n};\n\nconst initialState = {\n  date: monthAgo(),\n  license: '',\n  licenses: [],\n  items: [],\n  inited: false,\n  loading: false,\n  message: '',\n  search: '',\n  page: 1,\n  total: 0\n};\n\nconst repos = (state = initialState, action) => {\n  const {\n    items,\n    message,\n    licenses,\n    payload,\n    type,\n    total_count\n  } = action;\n  switch (type) {\n    case FETCH_LICENSES_SUCCEEDED:\n      sessionStorage.setItem('licenses', JSON.stringify(licenses));\n      return {\n        ...state,\n        licenses: [{key: 'all', spdx_id: 'All'}, ...licenses]\n      };\n    case FETCH_REPOS_STARTED:\n      return {\n        ...state,\n        loading: true,\n      };\n    case FETCH_REPOS_SUCCEEDED:\n      return {\n        ...state,\n        items,\n        total: total_count,\n        loading: false,\n      };\n    case FETCH_LICENSES_FAILED:\n    case FETCH_REPOS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        message\n      };\n    case SET_QUERY:\n      return {\n        ...state,\n        search: payload.search,\n        license: payload.license === 'all' ? '' : payload.license || state.license,\n        page: payload.page || state.page\n      };\n    default:\n      return state;\n  }\n};\n\nexport default repos;\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport { loadingBarReducer } from 'react-redux-loading-bar';\n\nimport repos from './repos/store';\n\nconst rootReducer = history =>\n  combineReducers({\n    router: connectRouter(history),\n    repos,\n    loadingBar: loadingBarReducer,\n  });\n\nexport default rootReducer;\n","const searchParams = (history, [key, value], remove = false) => {\n  let searchQuery = urlParams(history.location.search);\n  searchQuery.set(key, value);\n  if (remove) {\n    searchQuery.delete(remove);\n  }\n  return `?${searchQuery.toString()}`;\n};\n\nconst displayTotal = num => new Intl.NumberFormat('ru-RU', {style: 'decimal'}).format(num);\nconst urlParams = args => new URLSearchParams(args);\n\nexport {\n  displayTotal,\n  searchParams,\n  urlParams\n};\n","import { baseURL, perPage, maxTotal } from './constants';\nimport { urlParams } from './utils';\n\n// Github invalidate tokens found in repo files so we encode it\nconst token = atob('ZDM2NmZhZTBjNjM2NGZmZjEzMzkwODMzNTlmMTk1OTZkZjcxMjE2Yg==');\n\nconst serializeParams = args => {\n  let params = urlParams(args);\n  return params.toString();\n};\n\nconst parseQuery = (aprgs) => {\n  const params = urlParams(aprgs);\n  let result = {};\n  for (let [key, value] of params) {\n    result[key] = key === 'page' ? parseInt(value, 10) : value;\n  }\n  return result;\n};\n\nconst fetchData = (endpoint, args = {}) => {\n  let url = `${baseURL}${endpoint}`;\n  if (Object.keys(args).length) {\n    const {date, license, search, page} = args;\n    const created = `+created:\">${date.toISOString().slice(0, 10)}\"`;\n    const lang = `+language:javascript`;\n    const filter = license.length ? `+license:${license}` : '';\n    const query = `${search}${created}${lang}${filter}`;\n    const params = {\n      sort: 'stars',\n      order: 'desc',\n      per_page: perPage,\n      page: page\n    };\n    url = `${url}?q=${query}&${serializeParams(params)}&access_token=${token}`;\n  }\n  return fetch(`${url}`)\n    .then(response => response.json())\n    .catch(error => error.message);\n};\n\nconst fetchLicenses = async () => {\n  const savedData = sessionStorage.getItem('licenses');\n  const parsedData = JSON.parse(savedData) || {};\n  if (Object.keys(parsedData).length) {\n    return parsedData;\n  } else {\n    return await fetchData('/licenses');\n  }\n};\n\nconst fetchRepos = async (args) => {\n  const data = await fetchData('/search/repositories', args);\n  return data;\n};\n\nexport {\n  fetchLicenses,\n  fetchRepos,\n  perPage,\n  maxTotal,\n  parseQuery\n};\n","const baseURL = 'https://api.github.com';\nconst perPage = 20;\nconst maxTotal = 1000;\n\nexport {\n  baseURL,\n  perPage,\n  maxTotal\n};\n","import { call, put, select, takeLatest } from 'redux-saga/effects';\nimport { showLoading, hideLoading } from 'react-redux-loading-bar';\nimport { fetchLicenses, fetchRepos, parseQuery } from '../api';\nimport {\n  FETCH_LICENSES_STARTED,\n  FETCH_LICENSES_SUCCEEDED,\n  FETCH_LICENSES_FAILED,\n  FETCH_REPOS_STARTED,\n  FETCH_REPOS_SUCCEEDED,\n  FETCH_REPOS_FAILURE,\n  LOCATION_CHANGE,\n  SET_QUERY\n} from './actions';\n\nconst getState = (state, key) => state[key];\n\nfunction* getLicenses() {\n  const {licenses} = yield select(getState, 'repos');\n  if (!licenses.length) {\n    yield put({\n      type: FETCH_LICENSES_STARTED\n    });\n    try {\n      const licenses = yield call(fetchLicenses);\n      yield put({\n        type: FETCH_LICENSES_SUCCEEDED,\n        licenses\n      });\n    } catch (e) {\n      yield put({\n        type: FETCH_LICENSES_FAILED,\n        message: e.message,\n      });\n    }\n  }\n};\n\nfunction* getQuery({payload}) {\n  yield put({\n    type: SET_QUERY,\n    payload: parseQuery(payload.location.search)\n  });\n};\n\nfunction* getRepos({ payload }) {\n  yield put({\n    type: FETCH_REPOS_STARTED\n  });\n  const {date, license, search, page} = yield select(getState, 'repos');\n  yield put(showLoading());\n  try {\n    const {items, total_count} = yield call(fetchRepos, {\n      date, license, search, page\n    });\n    yield put({\n      type: FETCH_REPOS_SUCCEEDED,\n      items,\n      total_count\n    });\n  } catch (e) {\n    yield put({\n      type: FETCH_REPOS_FAILURE,\n      message: e.message,\n    });\n  } finally {\n    yield put(hideLoading());\n  }\n};\n\nfunction* repos() {\n  yield takeLatest(LOCATION_CHANGE, getQuery);\n  yield takeLatest(SET_QUERY, getRepos);\n  yield takeLatest(SET_QUERY, getLicenses);\n}\n\nexport default repos;\n","import { spawn } from 'redux-saga/effects';\n\nimport repos from './repos/sagas';\n\nfunction* root() {\n  yield spawn(repos);\n}\n\nexport default root;\n","import { applyMiddleware, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './rootReducer';\nimport root from './sagas';\n\nconst history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware()\n\nconst configureStore = (preloadedState) => {\n  const store = createStore(\n    rootReducer(history),\n    preloadedState,\n    composeWithDevTools(\n      applyMiddleware(\n        routerMiddleware(history),\n        sagaMiddleware\n      )\n    )\n  );\n  sagaMiddleware.run(root);\n  return store;\n};\n\nexport { configureStore, history };\n","import React from 'react';\n\nimport style from './repos.module.css';\n\nconst Search = ({\n  history,\n  onChange,\n  search,\n}) => {\n  const handleChange = ({\n    nativeEvent: {\n      target: { value },\n      which\n    }\n  }) => {\n    if (which === 13) {\n      onChange(history, ['search', value], 'page');\n    }\n  };\n  return (\n    <header className={style.search}>\n      <input\n        autoFocus\n        spellCheck={false}\n        type='text'\n        className={style.input}\n        placeholder=\"Enter name or part\"\n        defaultValue={search}\n        onKeyUp={event => handleChange(event)}\n      />\n    </header>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { maxTotal } from '../constants';\nimport { displayTotal } from '../utils';\nimport style from './repos.module.css';\n\n\nconst Header = ({\n  history,\n  license,\n  licenses,\n  onChange,\n  total\n}) => {\n  const onLicenseChange = ({target: {value}}) => {\n    onChange(history, ['license', value]);\n  };\n  const licenseItem = ({key, spdx_id}) => (\n    <option key={key} value={key}>\n      {spdx_id}\n    </option>\n  );\n  return (\n    <header className={style.header}>\n      {total ?\n        <div className={style.counter}>\n          {total > maxTotal ? 'More than ' : ''}\n          {displayTotal(total > maxTotal ? maxTotal : total)} result{total > 1 ? 's' : ''} \n        </div>\n      :\n        <div className={style.counter}>\n          No results\n        </div>\n      }\n      {licenses.length \n        ? <div className={style.filter}>\n          Filter by license: \n          <select\n            className={style.license}\n            onChange={onLicenseChange}\n            defaultValue={license}>\n            {licenses.map(licenseItem)}\n          </select>\n        </div>\n      : null}\n    </header>\n  );\n};\n\nexport default Header;\n\nHeader.propTypes = {\n  props: PropTypes.object\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Octicon, { Law, Star } from '@githubprimer/octicons-react';\n\nimport style from './repos.module.css';\n\nconst Item = ({full_name, id, html_url, license = {name: ''}, stargazers_count}) => (\n  <li key={id} className={style.item} data={JSON.stringify(license)}>\n    <h3 className={style.name}>\n      <a href={html_url} target='_blank' rel='noopener noreferrer'>{full_name}</a>\n    </h3>\n    <span className={style.details}>\n      <Octicon key=\"star\" icon={Star} className={style.icon}/>\n      <span className={style.label}>\n        {stargazers_count}\n      </span>\n      {license && license.key !== 'other'\n        ? <Fragment>\n            <Octicon key=\"law\" icon={Law} className={style.icon}/>\n            <span className={style.label}>\n              {license.spdx_id}\n            </span>\n          </Fragment>\n        : null}\n    </span>\n  </li>\n);\n\nexport default Item;\n\nItem.propTypes = {\n  props: PropTypes.object\n};\n","import React, { Fragment, memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Item from './Item';\n\nimport style from './repos.module.css';\n\nconst List = ({items, loading}) => (\n  <Fragment>\n    {items.length ?\n      <ol className={style.list}>\n        {items.map(Item)}\n      </ol>\n    :\n      <div className={style.list}>\n        <div className={style.empty}>\n          {loading ? 'loading' : 'No repos found'}\n        </div>\n      </div>\n    }\n  </Fragment>\n);\n\nexport default memo(List);\n\nList.propTypes = {\n  props: PropTypes.object\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Pagination from 'rc-pagination';\nimport localeInfo from 'rc-pagination/lib/locale/ru_RU'\nimport { Link } from 'react-router-dom';\nimport Octicon, { ChevronLeft, ChevronRight } from '@githubprimer/octicons-react';\n\nimport { maxTotal, perPage } from '../constants';\nimport { displayTotal, searchParams } from '../utils';\n\nimport style from './repos.module.css';\n\nconst Pager = ({history, page, total}) => {\n  const pagerItem = (current, type) => {\n    let path = searchParams(history, ['page', current]);\n    let display = displayTotal(current);\n    if (type === 'prev') {\n      display = <Octicon key=\"icon\" icon={ChevronLeft}/>;\n    }\n    if (type === 'next') {\n      display = <Octicon key=\"icon\" icon={ChevronRight}/>;\n    }\n    if (current === page || current === 0) {\n      return (\n        <span className={style.page}>\n          {display}\n        </span>\n      );\n    }\n    return (\n      <Link to={path} className={style.page}>\n        {display}\n      </Link>\n    );\n  };\n\n  if (!total) {\n    return null;\n  }\n\n  return (\n    <Pagination\n      locale={localeInfo}\n      className={style.pagination}\n      hideOnSinglePage\n      defaultCurrent={page}\n      itemRender={pagerItem}\n      pageSize={perPage}\n      showLessItems\n      total={total > maxTotal ? maxTotal : total}\n      showPrevNextJumpers={false}\n    />\n  );\n};\n\nexport default Pager;\n\nPager.propTypes = {\n  props: PropTypes.object\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Search from './Search';\nimport Header from './Header';\nimport List from './List';\nimport Pager from './Pager';\n\nimport style from './repos.module.css';\n\nconst Title = () => (\n  <h1 className={style.title}>\n    Popular Javascript repos from last month\n  </h1>\n);\n\nconst Repos = (props) => {\n  return (\n    <main>\n      <Search {...props}/>\n      <Title/>\n      <Header {...props}/>\n      <List {...props}/>\n      <Pager {...props}/>\n    </main>\n  );\n};\n\nexport default Repos;\n\nRepos.propTypes = {\n  props: PropTypes.object\n};\n","import { memo } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { searchParams } from '../utils';\nimport Repos from './Repos';\n\nconst mapStateToProps = state => state.repos;\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: (history, add, remove) => {\n      history.push(searchParams(history, add, remove));\n    }\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(memo(withRouter(Repos)));\n\n\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport LoadingBar from 'react-redux-loading-bar';\nimport { configureStore, history } from './store';\n\nimport ReposContainer from './repos/ReposContainer';\nconst store = configureStore();\n\nconst style = {\n  top: 0,\n  zIndex: 2,\n  backgroundColor: '#0080ff',\n  height: '5px'\n};\n\nconst App = () => (\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <LoadingBar style={style}/>\n      <Switch>\n        <Route path='/' component={ReposContainer} />\n      </Switch>\n    </ConnectedRouter>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"repos_search__2_lHh\",\"input\":\"repos_input__KiyEJ\",\"repos\":\"repos_repos__32gzz\",\"list\":\"repos_list__1oOGa\",\"header\":\"repos_header__2FqSA\",\"title\":\"repos_title__3MPgG\",\"license\":\"repos_license__2EiZ6\",\"item\":\"repos_item__19Yyj\",\"name\":\"repos_name__17LAW\",\"icon\":\"repos_icon__mAwmS\",\"details\":\"repos_details__2I2Bm\",\"label\":\"repos_label__P23r5\",\"empty\":\"repos_empty__1ZEGb\",\"back\":\"repos_back__adjqh\",\"pagination\":\"repos_pagination__2poV8\",\"page\":\"repos_page__3ZTsO\"};"],"sourceRoot":""}